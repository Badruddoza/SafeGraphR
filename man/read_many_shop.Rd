% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_many_files.R
\name{read_many_shop}
\alias{read_many_shop}
\title{Read and row-bind many files from the SafeGraph Shop}
\usage{
read_many_shop(
  dir = ".",
  filelist = NULL,
  start_date = NULL,
  keeplist = c("patterns", "normalization_stats.csv", "home_panel_summary.csv",
    "visit_panel_summary.csv", "brand_info.csv"),
  exdir = dir,
  cleanup = TRUE,
  by = NULL,
  fun = sum,
  na.rm = TRUE,
  filter = NULL,
  expand_int = NULL,
  expand_cat = NULL,
  expand_name = NULL,
  multi = NULL,
  naics_link = NULL,
  select = NULL,
  gen_fips = TRUE,
  silent = FALSE,
  ...
)
}
\arguments{
\item{dir}{Name of the directory the files are in.}

\item{filelist}{Optionally specify only a subset of the filename to read in.}

\item{start_date}{A vector of dates giving the first date present in each zip file, to be passed to \code{read_patterns} giving the first date present in the file, as a date object. When using \code{read_many_shop} this **really** should be included, since the patterns file names in the shop files are not in a format \code{read_patterns} can pick up on automatically. If left unspecified, will produce an error. To truly go ahead unspecified, set this to \code{FALSE}.}

\item{keeplist, exdir, cleanup}{Arguments to be passed to \code{read_shop}, specified as in \code{help(read_shop)}.}

\item{by, fun, na.rm, filter, expand_int, expand_cat, expand_name, multi, naics_link, select, gen_fips, silent, ...}{Other arguments to be passed to \code{read_patterns}, specified as in \code{help(read_patterns)}.}
}
\description{
This accepts a directory. It will use \code{read_shop} to load every \code{zip} in that folder, assuming they are all files downloaded from the SafeGraph shop. It will then row-bind together each of the subfiles, so you'll get a list where one entry all the normalization data row-bound together, another is all the patterns files, and so on.
.
Note that after reading in data, if \code{gen_fips = TRUE}, state and county names can be merged in using \code{data(fips_to_names)}.
}
